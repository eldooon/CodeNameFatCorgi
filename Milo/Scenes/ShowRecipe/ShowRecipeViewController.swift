//
//  ShowRecipeViewController.swift
//  Milo
//
//  Created by Eldon Chan on 4/2/18.
//  Copyright (c) 2018 ByEldon. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowRecipeDisplayLogic: class {
    func displayRecipe(viewModel: ShowRecipe.GetRecipe.ViewModel)
    func displayAddRecipe(viewModel: DisplayAlert.AddRecipe.ViewModel)
}

class ShowRecipeViewController: UIViewController, ShowRecipeDisplayLogic {
    
    var interactor: ShowRecipeBusinessLogic?
    var router: (NSObjectProtocol & ShowRecipeRoutingLogic & ShowRecipeDataPassing)?
    var displayedRecipes: ShowRecipe.GetRecipe.ViewModel.DisplayedRecipe?
    
    @IBOutlet weak var recipeImageView: UIImageView!
    @IBOutlet weak var recipeNameLabel: UILabel!
    @IBOutlet weak var recipeDescriptionTextView: UITextView!
    // MARK: Object lifecycle
    
    @IBAction func addRecipeButtonTapped(_ sender: Any) {
        let request = ShowRecipe.AddRecipe.Request()
        interactor?.addRecipe(request: request)
    }
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ShowRecipeInteractor()
        let presenter = ShowRecipePresenter()
        let router = ShowRecipeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getRecipe()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func getRecipe()
    {
        let request = ShowRecipe.GetRecipe.Request()
        interactor?.getRecipe(request: request)
    }
    
    func displayRecipe(viewModel: ShowRecipe.GetRecipe.ViewModel)
    {
        let displayedsRecipe = viewModel.displayedRecipe
        recipeImageView.image = displayedsRecipe.image
        recipeNameLabel.text = displayedsRecipe.name
        recipeDescriptionTextView.text = displayedsRecipe.description
    }
    
    func displayAddRecipe(viewModel: DisplayAlert.AddRecipe.ViewModel) {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let alertView = storyboard.instantiateViewController(withIdentifier: "AlertView") as! AlertViewController
        alertView.modalTransitionStyle = .crossDissolve
        alertView.displayedAlert = viewModel.displayedAlert
        present(alertView, animated: true, completion: nil)
    }
}
